{"version":3,"file":"error-message.js","sources":["../src/error-message/ErrorMessage.tsx","../src/error-message/useCopyText.tsx"],"sourcesContent":["import type { CSSObject } from '@emotion/react';\nimport { css } from '@emotion/react';\nimport { countBy, isFunction, sum, toArray } from 'lodash';\nimport { useState, useCallback, useMemo } from 'react';\n\nimport {\n  Typography,\n  useDesignSystemTheme,\n  ErrorFillIcon,\n  CopyIcon,\n  CloseIcon,\n  Button,\n  Tooltip,\n  ChevronRightIcon,\n  ChevronDownIcon,\n} from '@databricks/design-system';\n\nexport interface ErrorMessageProps {\n  message: string;\n  compact?: boolean;\n  copyTooltip?: string;\n  copyTextFunc?: () => void;\n  clearTooltip?: string;\n  clearFunc?: () => void;\n  'data-testid'?: string;\n  styles?: CSSObject;\n}\n\nconst ERROR_ICON_SIZE = 20;\nconst ICON_BUTTON_SIZE = 24;\n\nexport const ErrorMessage = ({\n  message,\n  compact = false,\n  copyTooltip = 'Copy',\n  copyTextFunc,\n  clearTooltip = 'Close',\n  clearFunc,\n  'data-testid': dataTestId,\n  styles = {},\n}: ErrorMessageProps) => {\n  const [collapsed, setCollapsed] = useState(true);\n  const { theme, getPrefixedClassName } = useDesignSystemTheme();\n  const typographyPrefix = getPrefixedClassName('typography');\n\n  const [textOverflowed, setTextOverflowed] = useState(true);\n\n  const iconCount = sum(toArray(countBy([copyTextFunc, clearFunc], isFunction))) + 1;\n\n  const iconMargin = theme.spacing.xs;\n\n  const displayMessage = useMemo(() => {\n    const trimmedMessage = message.trim();\n\n    if (compact && collapsed) {\n      return trimmedMessage.split(/\\r?\\n/)[0];\n    } else {\n      return trimmedMessage;\n    }\n  }, [message, compact, collapsed]);\n\n  const messageWidthRef = useCallback(\n    (node) => {\n      if (node != null) {\n        setTextOverflowed(\n          node.parentElement.offsetWidth < node.parentElement.scrollWidth || message.trim() !== displayMessage,\n        );\n      }\n    },\n    [message, displayMessage],\n  );\n\n  const baseIconButtonStyles: CSSObject = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  };\n\n  const baseTextStyle: CSSObject = {\n    fontFamily: 'monospace',\n    '::first-letter': {\n      textTransform: 'capitalize',\n    },\n    paddingBottom: theme.spacing.sm,\n  };\n\n  const containerStyle: CSSObject = {\n    background: theme.colors.backgroundSecondary,\n    border: `solid 1px ${theme.colors.border}`,\n    borderRadius: theme.borders.borderRadiusMd,\n    padding: `${theme.spacing.sm}px ${theme.spacing.sm}px 0`,\n    display: 'flex',\n    overflowY: 'auto',\n    flexWrap: 'wrap',\n  };\n\n  return (\n    <div css={css({ ...containerStyle, ...styles })} data-testid={dataTestId}>\n      <ErrorFillIcon\n        css={css`\n          font-size: ${ERROR_ICON_SIZE}px;\n          margin-right: ${iconMargin}px;\n          color: ${theme.colors.textValidationDanger};\n        `}\n      />\n      <div\n        css={css`\n          flex: 1 1;\n          .${typographyPrefix} {\n            margin-bottom: 0;\n          }\n          width: ${`calc(100% - ${(ICON_BUTTON_SIZE + iconMargin) * (1 + iconCount)}px)`};\n        `}\n      >\n        {compact && textOverflowed && (\n          <Button\n            css={css({ ...baseIconButtonStyles, marginRight: iconMargin, float: 'left' })}\n            icon={collapsed ? <ChevronRightIcon /> : <ChevronDownIcon />}\n            aria-label={collapsed ? 'Expand' : 'Collapse'}\n            onClick={() => {\n              setCollapsed(!collapsed);\n            }}\n            size=\"small\"\n          />\n        )}{' '}\n        <Typography>\n          {compact && collapsed ? (\n            <Typography.Text\n              ellipsis\n              css={css({ ...baseTextStyle, width: `calc(100% - ${ICON_BUTTON_SIZE + iconMargin}px)` })}\n            >\n              <span ref={messageWidthRef}>{displayMessage}</span>\n            </Typography.Text>\n          ) : (\n            <Typography.Paragraph css={css({ ...baseTextStyle, whiteSpace: 'break-spaces' })}>\n              {displayMessage}\n            </Typography.Paragraph>\n          )}\n        </Typography>\n      </div>\n      {copyTextFunc && (\n        <Tooltip title={copyTooltip}>\n          <Button\n            css={css({\n              ...baseIconButtonStyles,\n              marginLeft: iconMargin,\n            })}\n            icon={\n              <CopyIcon\n                css={css`\n                  color: ${theme.colors.textSecondary};\n                `}\n              />\n            }\n            onClick={copyTextFunc}\n            aria-label=\"Copy\"\n            size=\"small\"\n          />\n        </Tooltip>\n      )}\n      {clearFunc && (\n        <Tooltip title={clearTooltip}>\n          <Button\n            css={css({\n              ...baseIconButtonStyles,\n              marginLeft: iconMargin,\n            })}\n            icon={\n              <CloseIcon\n                css={css`\n                  color: ${theme.colors.textSecondary};\n                `}\n              />\n            }\n            onClick={clearFunc}\n            aria-label=\"Close\"\n            size=\"small\"\n          />\n        </Tooltip>\n      )}\n    </div>\n  );\n};\n","import { useCallback } from 'react';\nimport { useClipboard } from 'use-clipboard-copy';\n\nimport { useNotification } from '@databricks/design-system';\n\nexport interface UseCopyTextInputArgs {\n  text: string;\n  successNotificationText?: string;\n  errorNotificationText?: string;\n}\n\nexport const useCopyText = ({\n  text,\n  successNotificationText = 'Copied to clipboard',\n  errorNotificationText = 'Failed to copy to clipboard',\n}: UseCopyTextInputArgs): [() => void, React.ReactElement | null] => {\n  const [notificationAPI, notificationContextHolder] = useNotification();\n  const clipboard = useClipboard({\n    onSuccess() {\n      notificationAPI.success({\n        placement: 'bottomRight',\n        message: successNotificationText,\n      });\n    },\n    onError() {\n      notificationAPI.error({\n        placement: 'bottomRight',\n        message: errorNotificationText,\n      });\n    },\n  });\n\n  const copyText = useCallback(() => {\n    clipboard.copy(text);\n  }, [clipboard, text]);\n\n  return [copyText, notificationContextHolder];\n};\n"],"names":["ERROR_ICON_SIZE","ICON_BUTTON_SIZE","ErrorMessage","message","compact","copyTooltip","copyTextFunc","clearTooltip","clearFunc","dataTestId","styles","collapsed","setCollapsed","useState","theme","getPrefixedClassName","useDesignSystemTheme","typographyPrefix","textOverflowed","setTextOverflowed","iconCount","iconMargin","spacing","xs","displayMessage","useMemo","trimmedMessage","trim","split","messageWidthRef","useCallback","node","parentElement","offsetWidth","scrollWidth","baseIconButtonStyles","display","alignItems","justifyContent","baseTextStyle","fontFamily","textTransform","paddingBottom","sm","containerStyle","background","colors","backgroundSecondary","border","borderRadius","borders","borderRadiusMd","padding","overflowY","flexWrap","_jsxs","css","_jsx","textValidationDanger","marginRight","float","width","whiteSpace","marginLeft","textSecondary","useCopyText","text","successNotificationText","errorNotificationText","notificationAPI","notificationContextHolder","useNotification","clipboard","useClipboard","onSuccess","success","placement","onError","error","copyText","copy"],"mappings":"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"}