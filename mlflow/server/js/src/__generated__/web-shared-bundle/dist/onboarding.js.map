{"version":3,"file":"onboarding.js","sources":["../src/utils/useImmutableCallback.ts","../src/onboarding/hooks/useOnboardingController.tsx","../src/onboarding/hooks/cache.ts","../src/onboarding/hooks/useTutorialRouter.tsx","../src/onboarding/events.ts","../src/onboarding/utils/tutorialStorage.ts","../src/onboarding/hooks/useTutorialStorage.tsx","../src/onboarding/hooks/useTutorialContext.tsx","../src/onboarding/styles.ts","../src/onboarding/components/TutorialSidebar.tsx","../src/onboarding/components/TutorialButton.tsx","../src/onboarding/components/TutorialSubtitle.tsx","../src/onboarding/components/TutorialPage.tsx","../src/onboarding/components/TutorialHomePage.tsx","../src/onboarding/flows/dbsql/types.ts","../src/onboarding/flows/dbsql/pages/TutorialExploreDataPage.tsx","../src/onboarding/flows/dbsql/pages/TutorialGrantPermissionsPage.tsx","../src/onboarding/flows/dbsql/pages/TutorialImportSampleDashboardPage.tsx","../src/onboarding/flows/dbsql/pages/TutorialRunYourFirstQueryPage.tsx","../src/onboarding/flows/dbsql/useOnboardingChecks.tsx"],"sourcesContent":["import { isFunction, noop } from 'lodash';\nimport { useRef, useCallback } from 'react';\n\n// This hook wraps a potentially changeable function object and always returns the same\n// function so it's safe to use it with other hooks: wrapper function stays the same,\n// but will always call a latest wrapped function.\n// A quick note regarding `react-hooks/exhaustive-deps`: since wrapper function doesn't\n// change, it's safe to use it as a dependency, it will never trigger other hooks.\nexport default function useImmutableCallback<T extends (...args: any[]) => any>(callback?: T): T {\n  const callbackRef = useRef<T>();\n  callbackRef.current = isFunction(callback) ? callback : (noop as T);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useCallback<T>(((...args) => callbackRef.current?.(...args)) as T, []);\n}\n","import { noop } from 'lodash';\nimport React, { createContext, useContext, useEffect, useMemo, useReducer } from 'react';\n\nimport { OnboardingStorage } from '../../utils';\nimport type { OnboardingCheck, UseOnboardingChecks } from '../types';\n\nexport interface OnboardingConfigValue {\n  recordEvent?: <O extends string>(action: string, objectType: string, objectId?: O) => void;\n  conf: {\n    isAdmin: boolean;\n    cloud: string;\n    enableOnboarding: boolean;\n    orgId: string;\n    userId: string;\n  };\n}\n\nexport interface OnboardingContextValue {\n  isVisible: boolean;\n  isEnabled: boolean;\n  hasSkipped: boolean;\n  onboardingChecks: { [key: string]: OnboardingCheck };\n  hide: () => void;\n  show: () => void;\n  skip: () => void;\n  reset: () => void;\n}\n\nconst OnboardingConfig = createContext<OnboardingConfigValue>({\n  recordEvent: (a, b, c) => {},\n  conf: {\n    isAdmin: false,\n    cloud: '',\n    enableOnboarding: false,\n    userId: '',\n    orgId: '',\n  },\n});\n\nconst OnboardingContext = createContext<OnboardingContextValue>({\n  isVisible: false,\n  isEnabled: false,\n  hasSkipped: false,\n  onboardingChecks: {},\n  hide: noop,\n  show: noop,\n  skip: noop,\n  reset: noop,\n});\n\nfunction useOnboardingSettingsController(onboardingChecks: UseOnboardingChecks): OnboardingContextValue {\n  const isEnabled = useOnboardingEnabled();\n  const storage = useOnboardingStorage();\n\n  const [isVisible, setIsVisible] = useReducer((_state: boolean, visible: boolean) => {\n    storage.isVisible = visible;\n    return visible;\n  }, isEnabled && (storage.isVisible ?? false));\n  const { skip, hasSkipped, reset: resetSkip } = useOnboardingSkip();\n\n  const hasNoVisibilitySettings = typeof storage.isVisible === 'undefined';\n  const checksTodo = onboardingChecks.checksTodo ?? 0;\n\n  useEffect(() => {\n    if (checksTodo && hasNoVisibilitySettings) {\n      // Some checks left and user hasn't explicitly hidden panel. Show it\n      setIsVisible(true);\n    }\n  }, [checksTodo, hasNoVisibilitySettings]);\n\n  return {\n    isVisible: isVisible && !hasSkipped,\n    isEnabled,\n    onboardingChecks: onboardingChecks.checks,\n    hide: () => setIsVisible(false),\n    show: () => setIsVisible(true),\n    skip,\n    hasSkipped,\n    reset: () => {\n      resetSkip();\n      onboardingChecks.reset();\n    },\n  };\n}\n\nexport interface OnboardingContextProps {\n  onboardingChecks: UseOnboardingChecks;\n}\n\nexport function OnboardingContextProvider(props: React.PropsWithChildren<OnboardingContextProps>) {\n  const onboardingSettings = useOnboardingSettingsController(props.onboardingChecks);\n  return <OnboardingContext.Provider value={{ ...onboardingSettings }} {...props} />;\n}\n\nexport function useOnboardingController(): OnboardingContextValue {\n  return useContext(OnboardingContext);\n}\n\nexport function useOnboardingCheck(name: string): OnboardingCheck {\n  const context = useOnboardingController();\n  return context.onboardingChecks[name];\n}\n\nexport function OnboardingConfigProvider(props: React.PropsWithChildren<{ config: OnboardingConfigValue }>) {\n  return <OnboardingConfig.Provider value={props.config} />;\n}\n\nexport function useOnboardingConfig(): OnboardingConfigValue {\n  return useContext(OnboardingConfig);\n}\n\nexport function useOnboardingEnabled(): boolean {\n  const onboarding = useOnboardingController();\n  return onboarding.isEnabled;\n}\n\nexport function useOnboardingStorage() {\n  const config = useOnboardingConfig();\n  const { orgId, userId } = config.conf;\n  return useMemo(() => new OnboardingStorage(orgId, userId), [orgId, userId]);\n}\n\nexport function useOnboardingSkip() {\n  const storage = useOnboardingStorage();\n  const [hasSkipped, setSkipped] = useReducer((current: boolean, next: boolean) => {\n    storage.hasSkipped = next;\n    return next;\n  }, storage.hasSkipped);\n\n  return {\n    skip: () => setSkipped(true),\n    hasSkipped,\n    reset: () => {},\n  };\n}\n","import { useEffect, useMemo } from 'react';\n\nimport { useOnboardingStorage } from './useOnboardingController';\n\nexport function useCachedOnboardingCheck(check: string) {\n  const storage = useOnboardingStorage();\n  return useMemo(() => storage.getOnboardingCheck(check), [check, storage]);\n}\n\nexport function useCacheCompletedOnboardingCheckEffect(check: string, isCompleted: boolean | undefined) {\n  const storage = useOnboardingStorage();\n  useEffect(() => {\n    if (isCompleted) {\n      storage.setOnboardingCheck(check, isCompleted);\n    }\n  }, [storage, isCompleted, check]);\n}\n\nexport function useResetCachedOnboardingChecks() {\n  const storage = useOnboardingStorage();\n  return (...checks: string[]) => {\n    return checks.map((check) => storage.setOnboardingCheck(check, false));\n  };\n}\n","import { noop } from 'lodash';\nimport React, { useState } from 'react';\n\ntype TutorialRouter = {\n  pushPage: (page: React.ReactElement) => void;\n  popPage: () => void;\n  goHome: () => void;\n};\n\nexport const TutorialRouterContext = React.createContext<TutorialRouter>({\n  pushPage: noop,\n  popPage: noop,\n  goHome: noop,\n});\n\nexport function TutorialRoutes({ initialRoute }: { initialRoute: React.ReactElement }) {\n  const [routeStack, setRouteStack] = useState<Array<React.ReactElement>>([initialRoute]);\n  const currentRoute = routeStack[0];\n\n  const pushPage = (page: React.ReactElement) => setRouteStack([page, ...routeStack]);\n  const popPage = () => setRouteStack((stack) => stack.slice(1));\n  const goHome = () => setRouteStack([initialRoute]);\n\n  return (\n    <TutorialRouterContext.Provider\n      value={{\n        pushPage,\n        popPage,\n        goHome,\n      }}\n    >\n      {currentRoute}\n    </TutorialRouterContext.Provider>\n  );\n}\n\nexport function useTutorialRoute() {\n  return React.useContext(TutorialRouterContext);\n}\n\n/**\n * @deprecated\n */\nexport function useTutorialRouter(\n  initialRoute: React.ReactElement,\n): TutorialRouter & { currentRoute: React.ReactElement } {\n  const [routeStack, setRouteStack] = useState<Array<React.ReactElement>>([initialRoute]);\n  const pushPage = (page: React.ReactElement) => setRouteStack([page, ...routeStack]);\n  const popPage = () => setRouteStack(routeStack.slice(1));\n  const goHome = () => setRouteStack([initialRoute]);\n  const CurrentRoute = routeStack[0];\n  return {\n    currentRoute: CurrentRoute,\n    pushPage,\n    popPage,\n    goHome,\n  };\n}\n","import { useEffect } from 'react';\n\nimport { defineEvent } from '../mfe-services/comms/events';\nimport useImmutableCallback from '../utils/useImmutableCallback';\nimport { useOnboardingConfig } from './hooks/useOnboardingController';\n\nexport enum OnboardingAction {\n  TutorialAbandon = 'abandon',\n  GuidedNavigationForCheck = 'navigate',\n  CheckCompleted = 'completeCheck',\n  MarkAsDone = 'markAsDone',\n}\n\nconst ONBOARDING_EVENT_OBJECT_TYPE = 'onboarding';\n\nexport function useOnboardingRecorders() {\n  const config = useOnboardingConfig();\n\n  function recordOnboardingAction<O extends string>(action: OnboardingAction, objectId?: O) {\n    config.recordEvent && config.recordEvent(action, ONBOARDING_EVENT_OBJECT_TYPE, objectId);\n  }\n\n  function recordCompletedOnboardingCheck(checkName: string) {\n    recordOnboardingAction(OnboardingAction.CheckCompleted, checkName);\n  }\n\n  function recordMarkAsDoneOnboardingCheck(checkName: string) {\n    recordOnboardingAction(OnboardingAction.MarkAsDone, checkName);\n  }\n\n  function withOnboardingEventRecorder<T extends (...args: any[]) => any>(\n    callback: T,\n    action: OnboardingAction,\n    checkName: string,\n  ): T {\n    return ((...args) => {\n      recordOnboardingAction(action, checkName);\n      return callback(...args);\n    }) as T;\n  }\n\n  return {\n    recordOnboardingAction,\n    recordCompletedOnboardingCheck,\n    recordMarkAsDoneOnboardingCheck,\n    withOnboardingEventRecorder,\n  };\n}\n\nexport function useCallbackWithOnboardingEventRecorder<T extends (...args: any[]) => any>(\n  callback: T,\n  action: OnboardingAction,\n  objectId?: string,\n): T {\n  const recorders = useOnboardingRecorders();\n  const callbackWithEventRecorder: T = ((...args) => {\n    recorders.recordOnboardingAction(action, objectId);\n    return callback(...args);\n  }) as T;\n  return useImmutableCallback<T>(callbackWithEventRecorder);\n}\n\nexport function useRecordOnboardingCheckCompletedEvent(checkName: string, isCompleted: boolean | undefined) {\n  const recorders = useOnboardingRecorders();\n  useEffect(() => {\n    if (isCompleted) {\n      recorders.recordCompletedOnboardingCheck(checkName);\n    }\n  }, [isCompleted, checkName, recorders]);\n}\n\nexport type TutorialVisibilityChangedEventData = {\n  visible: boolean;\n};\n\nexport const tutorialVisibilityChanged = defineEvent<TutorialVisibilityChangedEventData>('tutorial:visibility-changed');\n\nexport type TutorialTaskStatusChangedEventData = {\n  tutorialTaskKey: string;\n  isCompleted: boolean;\n};\n\nexport const tutorialTaskStatusChanged =\n  defineEvent<TutorialTaskStatusChangedEventData>('tutorial:task-status-changed');\n","const TUTORIAL_STORAGE_PREFIX = 'tutorial';\n\nexport class TutorialStorage {\n  constructor(private _activeStorageId: string) {}\n\n  /**\n   * Get final key string of the specific task in local storage\n   *\n   * @example tutorial-user_12345-account-56789-task-createUnityCatalog\n   */\n  private _getTaskStorageKey(taskKey: string) {\n    return [TUTORIAL_STORAGE_PREFIX, this._activeStorageId, 'task', taskKey].join('-');\n  }\n\n  private _getVisibilityStorageKey() {\n    return [TUTORIAL_STORAGE_PREFIX, this._activeStorageId, 'visibility'].join('-');\n  }\n\n  getTask(taskKey: string) {\n    const taskStorageKey = this._getTaskStorageKey(taskKey);\n    return JSON.parse(window.localStorage.getItem(taskStorageKey) ?? 'null');\n  }\n\n  updateTask(taskKey: string, taskProps: any) {\n    const taskStorageKey = this._getTaskStorageKey(taskKey);\n    const cachedTask = this.getTask(taskKey);\n    const newTask = { ...cachedTask, ...taskProps };\n    window.localStorage.setItem(taskStorageKey, JSON.stringify(newTask));\n    return newTask;\n  }\n\n  getVisibility() {\n    const visibilityStorageKey = this._getVisibilityStorageKey();\n    // Default to true\n    return JSON.parse(window.localStorage.getItem(visibilityStorageKey) ?? 'true');\n  }\n\n  updateVisibility(isVisible: boolean) {\n    const visibilityStorageKey = this._getVisibilityStorageKey();\n    window.localStorage.setItem(visibilityStorageKey, JSON.stringify(isVisible));\n  }\n}\n","import { useCallback, useRef, useState } from 'react';\n\nimport { tutorialTaskStatusChanged } from '../events';\nimport type { TutorialTaskStatus } from '../types';\nimport { TutorialStorage } from '../utils';\nimport type { TutorialTasks } from './useTutorialContext';\n\nexport function useTutorialStorage(storageId: string, tutorialTasks: TutorialTasks) {\n  const tutorialStorage = useRef(new TutorialStorage(storageId));\n  const [cachedTaskStatusMap, setCachedTaskStatusMap] = useState<Record<string, TutorialTaskStatus>>(\n    tutorialTasks.tasks.reduce((map, { key }) => ({ ...map, [key]: tutorialStorage.current.getTask(key) }), {}),\n  );\n\n  const handleTaskStatusChanged = useCallback(({ tutorialTaskKey, isCompleted }) => {\n    tutorialStorage.current.updateTask(tutorialTaskKey, { isCompleted });\n    setCachedTaskStatusMap((oldStatusMap) => ({\n      ...oldStatusMap,\n      [tutorialTaskKey]: { ...oldStatusMap[tutorialTaskKey], isCompleted },\n    }));\n  }, []);\n  tutorialTaskStatusChanged.useListener(handleTaskStatusChanged);\n\n  return { cachedTaskStatusMap, tutorialStorage: tutorialStorage.current };\n}\n","import { noop } from 'lodash';\nimport React, { createContext, useCallback, useContext, useState } from 'react';\n\nimport { tutorialVisibilityChanged } from '../events';\nimport type { TutorialTaskStatus } from '../types';\nimport { useTutorialStorage } from './useTutorialStorage';\n\ntype EnumKey = string | number | symbol;\n\nexport interface TutorialTask<E extends EnumKey> {\n  key: E;\n  button: React.ReactElement;\n  useTutorialTaskStatus: () => TutorialTaskStatus;\n}\n\nexport class TutorialTasks<E extends EnumKey = string> {\n  tasksMap: Record<E, TutorialTask<E>> = {} as Record<E, TutorialTask<E>>;\n  tasks: TutorialTask<E>[] = [];\n\n  constructor(tasksList: TutorialTask<E>[]) {\n    this.tasks = tasksList;\n    tasksList.forEach((task: TutorialTask<E>) => {\n      this.tasksMap[task.key] = task;\n    });\n  }\n}\n\nexport interface TutorialContextValue<E extends EnumKey> {\n  showTutorial: () => void;\n  hideTutorial: () => void;\n  tutorialTasks: TutorialTasks<E>;\n  cachedTaskStatusMap: Record<string, TutorialTaskStatus>;\n}\n\nconst TutorialContext = createContext<TutorialContextValue<any>>({\n  tutorialTasks: {} as TutorialTasks,\n  cachedTaskStatusMap: {} as Record<string, TutorialTaskStatus>,\n  showTutorial: noop,\n  hideTutorial: noop,\n});\n\nexport function TutorialProvider({\n  enabled,\n  tutorialTasks,\n  storageId,\n  children,\n}: React.PropsWithChildren<{ enabled: boolean; tutorialTasks: TutorialTasks; storageId: string }>) {\n  const { cachedTaskStatusMap, tutorialStorage } = useTutorialStorage(storageId, tutorialTasks);\n  const [isVisible, setIsVisible] = useState<boolean>(tutorialStorage.getVisibility());\n\n  const showTutorial = () => {\n    tutorialStorage.updateVisibility(true);\n    setIsVisible(true);\n  };\n  const hideTutorial = () => {\n    tutorialStorage.updateVisibility(false);\n    setIsVisible(false);\n  };\n\n  const handleVisibilityChanged = useCallback(({ visible }) => {\n    if (visible) showTutorial();\n    else hideTutorial();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  tutorialVisibilityChanged.useListener(handleVisibilityChanged);\n\n  if (enabled && isVisible) {\n    return (\n      <TutorialContext.Provider\n        value={{\n          showTutorial,\n          hideTutorial,\n          tutorialTasks,\n          cachedTaskStatusMap,\n        }}\n      >\n        {children}\n      </TutorialContext.Provider>\n    );\n  }\n  return null;\n}\n\nexport function useTutorialContext<E extends EnumKey>() {\n  return useContext<TutorialContextValue<E>>(TutorialContext);\n}\n","import { useDesignSystemTheme } from '@databricks/design-system';\n\nexport function useOnboardingStyles() {\n  const { theme } = useDesignSystemTheme();\n\n  return {\n    tutorialPanelColors: {\n      sidebarMenuColor: '#dce0e2', // Non-DS color TODO: This color is also coded like this in webapp/web/js/shared_package/persona-nav/colors.ts\n      backgroundColor: theme.colors.grey200, //'#E4EBF0',\n    },\n    tutorialButtonColors: {\n      adminTaskButtonBackground: '#C6E0CC',\n      adminTaskButtonIconBackground: '#50AF7D',\n      userTaskButtonBackground: '#789CAA',\n      userTaskButtonIconBackground: '#2B5161',\n      adminTaskButtonBackgroundOnHover: '#CDE8D3',\n      adminTaskButtonIconBackgroundOnHover: '#54B883',\n      userTaskButtonBackgroundOnHover: '#87AFBF',\n      userTaskButtonIconBackgroundOnHover: '#325E70',\n      completedTaskButtonBackground: 'rgba(255, 255, 255, 0.5)',\n      completedTaskButtonBackgroundOnHover: 'rgba(255, 255, 255, 0.6)',\n      completedTaskButtonTextColor: '#33804C',\n    },\n    duboisColors: {\n      backgroundPrimary: theme.colors.backgroundPrimary,\n      typePrimary: '#2F3941',\n      typeSecondary: theme.colors.textValidationInfo,\n      typeSecondaryInverse: 'rgba(255, 255, 255, 0.75)',\n    },\n  };\n}\n\nexport const tutorialPanelDimensions = {\n  width: '366px',\n  paddingHorizontal: '24px',\n  paddingVertical: '32px',\n};\n\nexport const tutorialButtonDimensions = {\n  padding: '17px',\n  iconSize: '20px',\n  marginBottom: '8px',\n} as const;\n\nexport const adminOnboardingButtonContainerVerticalSpacing = '32px';\n\nexport const duboisFonts = {\n  header2Size: '22px',\n  header3Size: '18px',\n} as const;\n\nexport const tutorialDescriptionItemMargin = '24px';\nexport const antdDefaultSizeButtonVerticalPadding = '4.8px';\n","import { css } from '@emotion/react';\nimport React from 'react';\n\nimport { Button, CloseIcon, Tooltip } from '@databricks/design-system';\nimport { FormattedMessage } from '@databricks/i18n';\n\nimport { useTutorialContext } from '../hooks';\nimport { TutorialRoutes, useTutorialRoute } from '../hooks/useTutorialRouter';\nimport { tutorialPanelDimensions, useOnboardingStyles } from '../styles';\n\nexport function TutorialSidebar({ initialRoute }: { initialRoute: React.ReactElement }) {\n  const { hideTutorial } = useTutorialContext();\n  const { goHome } = useTutorialRoute();\n  const styles = useOnboardingStyles();\n\n  const azureToolbarHeight = 40; // see @databricks/persona-nav/src/components/cloud_provider_toolbar/AzureToolbar\n\n  const sidebarStyle = css`\n    height: 100vh;\n    flex-shrink: 0;\n    overflow-y: auto;\n    background: ${styles.tutorialPanelColors.backgroundColor};\n    display: flex;\n    flex-direction: column;\n    transition-duration: 0.3s;\n    transition-property: width;\n    width: ${tutorialPanelDimensions.width};\n    animation-fill-mode: both;\n    animation-duration: 0.3s;\n    position: relative;\n    .databricks-application-wrapper.databricks-application-wrapper--with-azure-toolbar & {\n      height: calc(100vh - ${azureToolbarHeight}px);\n    }\n  `;\n\n  const closeButtonStyle = css`\n    position: absolute;\n    top: 12px;\n    right: 12px;\n  `;\n\n  return (\n    <div css={sidebarStyle}>\n      <TutorialRoutes initialRoute={initialRoute} />\n      <Tooltip\n        placement=\"right\"\n        title={\n          <FormattedMessage\n            defaultMessage=\"Hide tutorial (can be reopened from the Help menu on the sidebar)\"\n            description=\"Onboarding: Tooltip to hide tutorial temporary\"\n          />\n        }\n      >\n        <Button\n          css={closeButtonStyle}\n          icon={<CloseIcon />}\n          onClick={() => {\n            hideTutorial();\n            // Whenever user reopens collapsed onboarding, we'll always reopen it on main panel\n            goHome();\n          }}\n        />\n      </Tooltip>\n    </div>\n  );\n}\n","import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport type { PropsWithChildren } from 'react';\nimport React from 'react';\n\nimport type { ButtonProps } from '@databricks/design-system';\nimport { Button, useDesignSystemTheme, ArrowRightIcon, CheckCircleBorderIcon } from '@databricks/design-system';\n\nimport type { RequireProperties } from '../../utils';\nimport { OnboardingAction, useCallbackWithOnboardingEventRecorder } from '../events';\nimport { useOnboardingCheck } from '../hooks/useOnboardingController';\nimport { useTutorialContext } from '../hooks/useTutorialContext';\nimport { TutorialRouterContext, useTutorialRoute } from '../hooks/useTutorialRouter';\nimport { tutorialButtonDimensions, useOnboardingStyles } from '../styles';\n\ntype TutorialButtonProps = RequireProperties<ButtonProps, 'onClick' | 'href' | 'children'> & {\n  variant: 'admin' | 'user';\n  completed: boolean | undefined;\n  eventName: string;\n};\n\ntype AutoTutorialButtonProps = Omit<TutorialButtonProps, 'onClick' | 'completed' | 'children'> & {\n  title: string;\n  targetPage: () => React.ReactElement;\n  checkName: string;\n};\n\n/**\n * @deprecated\n */\nexport function AutoTutorialButton(props: AutoTutorialButtonProps) {\n  const { pushPage } = React.useContext(TutorialRouterContext);\n  const myCheck = useOnboardingCheck(props.checkName);\n\n  return (\n    <LegacyTutorialButton onClick={() => pushPage(props.targetPage())} completed={myCheck.isCompleted} {...props}>\n      props.title\n    </LegacyTutorialButton>\n  );\n}\n\n/**\n * @deprecated\n */\nfunction UnStyledTutorialButton({\n  children,\n  variant,\n  completed = false,\n  onClick,\n  eventName,\n  ...props\n}: TutorialButtonProps) {\n  const onClickWithEventRecorder = useCallbackWithOnboardingEventRecorder(\n    onClick,\n    OnboardingAction.GuidedNavigationForCheck,\n    eventName,\n  );\n\n  return (\n    <Button {...props} block onClick={onClickWithEventRecorder}>\n      <span css={{ flexGrow: 1, textAlign: 'left' }}>{children}</span>\n      {completed ? <CheckCircleBorderIcon aria-label=\"completed\" /> : <ArrowRightIcon />}\n    </Button>\n  );\n}\n\ntype TutorialButtonColors = {\n  buttonBackground: string;\n  iconBackground: string;\n  buttonBackgroundOnHover: string;\n  iconBackgroundOnHover: string;\n  textWhenCompleted: string;\n  text: string;\n  arrow: string;\n};\n\n/**\n * @deprecated\n */\nexport function LegacyTutorialButton(props: TutorialButtonProps) {\n  const onboardingStyles = useOnboardingStyles();\n  const { duboisColors, tutorialButtonColors } = onboardingStyles;\n\n  const StyledTutorialButton = React.useMemo(() => {\n    const colorMap: Record<TutorialButtonProps['variant'], TutorialButtonColors> = {\n      admin: {\n        buttonBackground: tutorialButtonColors.adminTaskButtonBackground,\n        iconBackground: tutorialButtonColors.adminTaskButtonIconBackground,\n        buttonBackgroundOnHover: tutorialButtonColors.adminTaskButtonBackgroundOnHover,\n        iconBackgroundOnHover: tutorialButtonColors.adminTaskButtonIconBackgroundOnHover,\n        text: duboisColors.typePrimary,\n        arrow: duboisColors.typeSecondary,\n        textWhenCompleted: tutorialButtonColors.completedTaskButtonTextColor,\n      },\n      user: {\n        buttonBackground: tutorialButtonColors.userTaskButtonBackground,\n        iconBackground: tutorialButtonColors.userTaskButtonIconBackground,\n        buttonBackgroundOnHover: tutorialButtonColors.userTaskButtonBackgroundOnHover,\n        iconBackgroundOnHover: tutorialButtonColors.userTaskButtonIconBackgroundOnHover,\n        text: duboisColors.backgroundPrimary,\n        arrow: duboisColors.backgroundPrimary,\n        textWhenCompleted: tutorialButtonColors.userTaskButtonIconBackground,\n      },\n    };\n\n    return styled(UnStyledTutorialButton)`\n      display: flex;\n      align-items: center;\n      padding: 0 ${tutorialButtonDimensions.padding} 0 0;\n      border: none;\n      height: auto;\n      color: ${({ variant, completed }) => (completed ? colorMap[variant].textWhenCompleted : colorMap[variant].text)};\n      transition: background-color 180ms linear;\n      background-color: ${({ variant, completed }) =>\n        completed ? tutorialButtonColors.completedTaskButtonBackground : colorMap[variant].buttonBackground};\n\n      .anticon:first-of-type {\n        color: ${duboisColors.typeSecondaryInverse};\n        padding: ${tutorialButtonDimensions.padding};\n        background-color: ${({ variant }) => colorMap[variant].iconBackground};\n        transition: inherit;\n      }\n      .anticon:last-of-type {\n        color: ${({ variant, completed }) =>\n          completed ? tutorialButtonColors.completedTaskButtonTextColor : colorMap[variant].arrow};\n      }\n      .anticon {\n        font-size: ${tutorialButtonDimensions.iconSize};\n      }\n\n      &:hover,\n      &:focus {\n        background-color: ${({ variant, completed }) =>\n          completed\n            ? tutorialButtonColors.completedTaskButtonBackgroundOnHover\n            : colorMap[variant].buttonBackgroundOnHover};\n        color: ${({ variant, completed }) =>\n          completed ? colorMap[variant].textWhenCompleted : colorMap[variant].text};\n        .anticon:first-of-type {\n          background-color: ${({ variant }) => colorMap[variant].iconBackgroundOnHover};\n        }\n      }\n    `;\n  }, [duboisColors, tutorialButtonColors]);\n\n  return <StyledTutorialButton {...props} />;\n}\n\nexport function TutorialButton({\n  icon,\n  variant,\n  targetTutorialPage,\n  tutorialTaskKey,\n  onClick,\n  children,\n}: PropsWithChildren<{\n  icon: React.ReactNode;\n  variant: 'admin' | 'user';\n  targetTutorialPage: React.ReactElement;\n  tutorialTaskKey: string;\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n}>) {\n  const { theme } = useDesignSystemTheme();\n  const { pushPage } = useTutorialRoute();\n  const { tutorialTasks } = useTutorialContext();\n  const { isCompleted } = tutorialTasks.tasksMap[tutorialTaskKey].useTutorialTaskStatus();\n\n  /**\n   * Keep using some pre-existing hard-code color theme to have consistent UX\n   * till all the applications migrate to this shared tutorial component\n   * then will work with designer to switch to dubois color theme later\n   */\n  const colorMap: Record<'admin' | 'user', any> = {\n    admin: {\n      icon: {\n        background: '#50af7d',\n        backgroundOnHover: '#54b883',\n      },\n      completed: {\n        background: theme.colors.grey100,\n        backgroundOnHover: undefined,\n        color: theme.colors.green600,\n      },\n      todo: {\n        background: '#c6e0cc',\n        backgroundOnHover: '#cde8d3',\n        color: theme.colors.textPrimary,\n      },\n    },\n    user: {\n      icon: {\n        background: '#2b5161',\n        backgroundOnHover: '#325e70',\n      },\n      completed: {\n        background: theme.colors.grey100,\n        backgroundOnHover: undefined,\n        color: theme.colors.grey800,\n      },\n      todo: {\n        background: '#789caa',\n        backgroundOnHover: '#87afbf',\n        color: theme.colors.actionPrimaryTextDefault,\n      },\n    },\n  };\n\n  const colorGroup = isCompleted ? 'completed' : 'todo';\n\n  const buttonStyles = css`\n    border: none;\n    cursor: pointer;\n    padding: 0;\n    transition: background-color 180ms linear;\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    width: 100%;\n    background: ${colorMap[variant][colorGroup].background};\n    margin-bottom: ${theme.spacing.sm}px;\n\n    > .anticon {\n      font-size: 20px;\n      padding: ${theme.spacing.md}px;\n      transition: inherit;\n\n      &:first-of-type {\n        color: rgba(255, 255, 255, 0.75);\n        background-color: ${colorMap[variant].icon.background};\n      }\n\n      + span {\n        margin: 0 ${theme.spacing.sm}px;\n        color: ${colorMap[variant][colorGroup].color};\n      }\n\n      &:last-of-type {\n        color: ${colorMap[variant][colorGroup].color};\n      }\n    }\n\n    &:hover,\n    &:focus {\n      background-color: ${colorMap[variant][colorGroup].backgroundOnHover};\n      .anticon:first-of-type {\n        background-color: ${colorMap[variant].icon.backgroundOnHover};\n      }\n    }\n  `;\n\n  const handleClick: React.MouseEventHandler<HTMLButtonElement> = (...args) => {\n    pushPage(targetTutorialPage);\n    onClick(...args);\n  };\n\n  return (\n    <button onClick={handleClick} css={buttonStyles}>\n      {icon}\n      <span css={{ flexGrow: 1, textAlign: 'left' }}>{children}</span>\n      {isCompleted ? (\n        <CheckCircleBorderIcon aria-label={`${tutorialTaskKey}-completed`} />\n      ) : (\n        <ArrowRightIcon aria-label={`${tutorialTaskKey}-todo`} />\n      )}\n    </button>\n  );\n}\n","import { css } from '@emotion/react';\nimport type { ReactNode } from 'react';\nimport React from 'react';\n\nimport { Typography } from '@databricks/design-system';\n\nimport { duboisFonts, tutorialDescriptionItemMargin } from '../styles';\n\ntype TutorialSubtitleProps = {\n  children: NonNullable<ReactNode>;\n};\n\n// `!important` to override antd h3 style\nconst subtitleStyle = css`\n  font-size: ${duboisFonts.header3Size} !important;\n  margin-bottom: calc(${tutorialDescriptionItemMargin} - 8px);\n`;\n\nexport function TutorialSubtitle({ children }: TutorialSubtitleProps) {\n  return (\n    <Typography.Title level={3} css={subtitleStyle}>\n      {children}\n    </Typography.Title>\n  );\n}\n","import { css } from '@emotion/react';\nimport type { PropsWithChildren } from 'react';\nimport React from 'react';\n\nimport { ArrowLeftIcon, Button, CheckCircleFillIcon, Header, useDesignSystemTheme } from '@databricks/design-system';\nimport { FormattedMessage } from '@databricks/i18n';\n\nimport { OnboardingAction, useCallbackWithOnboardingEventRecorder } from '../events';\nimport { useTutorialContext, useTutorialRoute } from '../hooks';\nimport { useOnboardingController } from '../hooks/useOnboardingController';\nimport {\n  antdDefaultSizeButtonVerticalPadding,\n  tutorialDescriptionItemMargin,\n  tutorialPanelDimensions,\n  useOnboardingStyles,\n} from '../styles';\nimport type { OnboardingCheck } from '../types';\nimport { TutorialSubtitle } from './TutorialSubtitle';\n\nexport interface TutorialBasePageProps {\n  title: React.ReactNode;\n  description: React.ReactNode;\n  hasBack?: boolean;\n  nextStepButton?: React.ReactNode;\n}\n\nexport interface LegacyTutorialPageProps extends TutorialBasePageProps {\n  isCompleted?: boolean;\n  skipButton?: React.ReactNode;\n}\n\nexport interface TutorialCheckPageProps extends TutorialBasePageProps {\n  check: OnboardingCheck | undefined;\n  checkName?: string;\n  showDismiss?: boolean;\n}\n\nconst pageContainerStyle = css`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst pageHeaderStyle = css`\n  padding: 15px 56px 56px 24px;\n`;\n\nconst skipButtonStyle = css`\n  margin-bottom: calc(${tutorialDescriptionItemMargin} - ${antdDefaultSizeButtonVerticalPadding});\n`;\n\n/**\n * @deprecated\n */\nexport function LegacyTutorialPage({\n  children,\n  isCompleted,\n  title,\n  description,\n  hasBack = true,\n  skipButton,\n  nextStepButton,\n}: PropsWithChildren<LegacyTutorialPageProps>) {\n  const { duboisColors } = useOnboardingStyles();\n\n  const pageContentStyle = css`\n    flex-grow: 1;\n    padding: 0 ${tutorialPanelDimensions.paddingHorizontal} ${tutorialPanelDimensions.paddingVertical}\n      ${tutorialPanelDimensions.paddingHorizontal};\n    p {\n      color: ${duboisColors.typePrimary};\n      margin-bottom: ${tutorialDescriptionItemMargin};\n    }\n  `;\n\n  return (\n    <div css={pageContainerStyle}>\n      <div css={pageHeaderStyle}>\n        {/* todo: rebuild back button, not available in design-system header */}\n        {/* onBack={hasBack ? goHome : undefined} */}\n        <Header\n          title={\n            <div role=\"heading\" aria-level={3}>\n              {title}\n            </div>\n          }\n        />\n      </div>\n\n      <div css={pageContentStyle}>\n        {isCompleted && (\n          // todo: design-system alert doesn't allow success notification\n          // <Alert\n          //   type=\"success\"\n          //   role=\"alert\"\n          //   css={{ marginBottom: tutorialDescriptionItemMargin }}\n          //   message={<FormattedMessage defaultMessage=\"Completed\" description=\"Onboarding: Completed alert\" />}\n          // />\n          <FormattedMessage defaultMessage=\"Completed\" description=\"Onboarding: Completed alert\" />\n        )}\n        <div>{description}</div>\n        <div>{children}</div>\n        {isCompleted && nextStepButton && (\n          <div css={{ marginTop: tutorialDescriptionItemMargin }}>\n            <TutorialSubtitle>\n              <FormattedMessage\n                defaultMessage=\"Next step...\"\n                description=\"Onboarding: section title for the next tutorial step\"\n              />\n            </TutorialSubtitle>\n            <div>{nextStepButton}</div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\n/**\n * @deprecated\n */\nexport function TutorialCheckPage(props: PropsWithChildren<TutorialCheckPageProps>) {\n  const { skip, onboardingChecks } = useOnboardingController();\n  const onSkipClick = useCallbackWithOnboardingEventRecorder(skip, OnboardingAction.TutorialAbandon);\n  const check = props.check || (props.checkName ? onboardingChecks[props.checkName] : undefined);\n  const shouldShowMarkAsDone = props.showDismiss || !props.check?.isCompleted;\n\n  return (\n    <LegacyTutorialPage\n      {...props}\n      isCompleted={check?.isCompleted}\n      skipButton={\n        shouldShowMarkAsDone && (\n          <Button\n            type=\"link\"\n            css={skipButtonStyle}\n            block\n            onClick={!props.showDismiss ? props.check?.markAsDone : onSkipClick}\n          >\n            {props.showDismiss ? (\n              <FormattedMessage\n                defaultMessage=\"Don't show again\"\n                description=\"Onboarding: button to hide tutorial forever\"\n              />\n            ) : (\n              <FormattedMessage\n                defaultMessage=\"Mark as done\"\n                description=\"Onboarding: button to mark tutorial step as done\"\n              />\n            )}\n          </Button>\n        )\n      }\n    />\n  );\n}\n\nexport interface TutorialPageProps {\n  tutorialTaskKey?: string;\n  title: React.ReactNode;\n  description: React.ReactNode;\n  canGoBack?: boolean;\n  completedText?: string;\n  nextTask?: {\n    title: string;\n    taskButton?: React.ReactNode;\n  };\n}\n\nexport function TutorialPage({\n  tutorialTaskKey,\n  title,\n  description,\n  canGoBack = false,\n  completedText,\n  nextTask,\n  children,\n}: PropsWithChildren<TutorialPageProps>) {\n  const { theme } = useDesignSystemTheme();\n  const { popPage } = useTutorialRoute();\n  const { tutorialTasks } = useTutorialContext();\n  const taskStatus = tutorialTasks.tasksMap[tutorialTaskKey ?? '']?.useTutorialTaskStatus();\n\n  const containerStyles = css`\n    flex-grow: 1;\n    display: flex;\n    flex-direction: column;\n  `;\n\n  const headerRowStyles = css`\n    padding: ${theme.spacing.md}px 56px 56px ${theme.spacing.lg}px;\n    display: flex;\n    align-items: center;\n  `;\n\n  const contentStyles = css`\n    flex-grow: 1;\n    padding: 0 ${theme.spacing.lg}px 32px ${theme.spacing.lg}px;\n    p {\n      color: ${theme.colors.textPrimary};\n      margin-bottom: ${theme.spacing.lg}px;\n    }\n  `;\n\n  return (\n    <div css={containerStyles}>\n      <section css={headerRowStyles}>\n        {canGoBack && <Button css={{ marginRight: theme.spacing.sm }} icon={<ArrowLeftIcon />} onClick={popPage} />}\n        <Header title={title} />\n      </section>\n\n      <section css={contentStyles}>\n        {/* Completed indicator */}\n        {taskStatus?.isCompleted && (\n          <div\n            css={{\n              display: 'flex',\n              alignItems: 'center',\n              background: theme.colors.backgroundValidationSuccess,\n              color: theme.colors.textValidationSuccess,\n              padding: `${theme.spacing.sm}px ${theme.spacing.md}px`,\n              border: `1px solid ${theme.colors.green400}`,\n              borderRadius: theme.general.borderRadiusBase,\n              marginBottom: theme.spacing.lg,\n            }}\n            role=\"status\"\n            aria-label=\"completed\"\n          >\n            <CheckCircleFillIcon css={{ marginRight: theme.spacing.sm }} /> {completedText ?? 'Completed'}\n          </div>\n        )}\n\n        <div>{description}</div>\n        <div>{children}</div>\n        {nextTask && (\n          <div css={{ marginTop: theme.spacing.lg }}>\n            <TutorialSubtitle>{nextTask.title ?? 'Next step...'}</TutorialSubtitle>\n            {nextTask.taskButton}\n          </div>\n        )}\n      </section>\n      {/** todo: skip button */}\n    </div>\n  );\n}\n","import React from 'react';\n\nimport { useOnboardingController } from '../hooks/useOnboardingController';\nimport { adminOnboardingButtonContainerVerticalSpacing } from '../styles';\nimport { TutorialCheckPage } from './TutorialPage';\nimport { TutorialSubtitle } from './TutorialSubtitle';\n\nexport interface TutorialHomePageProps {\n  title: React.ReactElement | string;\n  description: React.ReactElement | string;\n  userSubtitle: React.ReactElement | string;\n}\n\nexport function TutorialHomePage({ title, description, userSubtitle }: TutorialHomePageProps) {\n  const { onboardingChecks } = useOnboardingController();\n\n  const buttons = Object.keys(onboardingChecks).map((step) => {\n    const currentStep = onboardingChecks[step];\n    return currentStep.button;\n  });\n\n  return (\n    <TutorialCheckPage hasBack={false} check={undefined} showDismiss title={title} description={description}>\n      <div data-testid=\"TutorialHomePage.Content\">\n        <div style={{ marginTop: adminOnboardingButtonContainerVerticalSpacing }}>\n          <TutorialSubtitle>{userSubtitle}</TutorialSubtitle>\n          {buttons}\n        </div>\n      </div>\n    </TutorialCheckPage>\n  );\n}\n","export const Steps = {\n  RunFirstQuery: 'runFirstQuery',\n  ExploreAvailableData: 'exploreAvailableData',\n  ImportSampleDashboard: 'importSampleDashboard',\n};\n","import React from 'react';\n\nimport { DataIcon } from '@databricks/design-system';\nimport { FormattedMessage } from '@databricks/i18n';\n\nimport { TutorialCheckPage } from '../../../components/TutorialPage';\nimport { useOnboardingCheck } from '../../../hooks/useOnboardingController';\nimport type { OnboardingPageProps } from '../../../types';\nimport { Steps } from '../types';\n\nconst dataIcon = <DataIcon />;\n\nexport default function TutorialExploreDataPage(props: OnboardingPageProps) {\n  const exploreAvailableDataCheck = useOnboardingCheck(Steps.ExploreAvailableData);\n\n  return (\n    <TutorialCheckPage\n      title={\n        <FormattedMessage defaultMessage=\"Explore available data\" description=\"Onboarding - explore data: Page title\" />\n      }\n      check={exploreAvailableDataCheck}\n      description={\n        <FormattedMessage\n          defaultMessage=\"<p>The data explorer (<strong>{dataIcon} Data</strong> in the Databricks SQL sidebar) lets you easily explore and manage permissions on databases and tables. You can view schema details, preview sample data, and see table details and properties. Additionally, administrators can view and change owners, as well as grant and revoke permissions.</p>\"\n          description=\"Onboarding - explore data: intro text\"\n          values={{\n            dataIcon,\n          }}\n        />\n      }\n    >\n      <div>\n        {/*<HelpTrigger showTooltip={false} renderAsLink type=\"DATA_EXPLORER\" css={{ fontSize: 'inherit' }}>*/}\n        {/*  <FormattedMessage*/}\n        {/*    defaultMessage=\"Learn more about the data explorer\"*/}\n        {/*    description=\"Onboarding - explore data: Read the data explorer guide link\"*/}\n        {/*  />*/}\n        {/*</HelpTrigger>*/}\n      </div>\n    </TutorialCheckPage>\n  );\n}\n","import React from 'react';\n\nimport { DataIcon } from '@databricks/design-system';\nimport { FormattedMessage } from '@databricks/i18n';\n\nimport TutorialLink from '../../../components/TutorialLink';\nimport { TutorialCheckPage } from '../../../components/TutorialPage';\nimport { useOnboardingCheck } from '../../../hooks/useOnboardingController';\nimport type { OnboardingPageProps } from '../../../types';\n\nconst dataIcon = <DataIcon />;\n\nexport default function TutorialGrantPermissionsPage(props: OnboardingPageProps) {\n  const grantPermissionCheck = useOnboardingCheck('grantPermissionCheck');\n\n  const description = (\n    <FormattedMessage\n      defaultMessage=\"\n        <p>Databricks SQL provides fine-grained access control for your databases, tables, and views. You can control this access via SQL-standard GRANT and REVOKE statements, or interactively in the data explorer (<strong>{dataIcon} Data</strong> in the Databricks SQL sidebar).</p>\n        <p>Only administrators have access to the data you configured access to in step 1. You should now grant permissions to additional users and groups, either using the data explorer, or <sampleDclQueryLink>by submitting SQL commands in the query editor</sampleDclQueryLink>.</p>\n        <p>Databricks strongly recommends <link>synchronizing users and groups with your identity provider</link>, and setting group-based permissions to your data.</p>\"\n      description=\"Onboarding - Grant Permissions: intro text for AWS and Azure\"\n      values={{\n        link: (chunks: string) => (\n          // <HelpTrigger showTooltip={false} renderAsLink type=\"USER_AND_GROUPS_OVERVIEW\" css={{ fontSize: 'inherit' }}>\n          //   {chunks}\n          // </HelpTrigger>\n          <></>\n        ),\n        sampleDclQueryLink: (chunks: string) => (\n          <TutorialLink\n            // href={`queries/new?${getUrlParamForSampleQueryType(SampleQueryType.DCL)}`}\n            eventName=\"grantPermissionCheckEditor\"\n          >\n            {chunks}\n          </TutorialLink>\n        ),\n        dataIcon,\n      }}\n    />\n  );\n\n  return (\n    <TutorialCheckPage\n      title={\n        <FormattedMessage defaultMessage=\"Grant permissions\" description=\"Onboarding - Grant Permissions: Page title\" />\n      }\n      description={description}\n      check={grantPermissionCheck}\n      nextStepButton={props.nextButton}\n    >\n      <div>\n        {/*<HelpTrigger*/}\n        {/*  showTooltip={false}*/}\n        {/*  renderAsLink*/}\n        {/*  type=\"DATA_ACCESS_CONTROL_MANAGE_PERMISSIONS\"*/}\n        {/*  css={{ fontSize: 'inherit' }}*/}\n        {/*>*/}\n        {/*  <FormattedMessage*/}\n        {/*    defaultMessage=\"Learn more about data object permissions\"*/}\n        {/*    description=\"Onboarding - Configure data access: Read the data object permissions guide link\"*/}\n        {/*  />*/}\n        {/*</HelpTrigger>*/}\n      </div>\n    </TutorialCheckPage>\n  );\n}\n","import React from 'react';\n\nimport { FormattedMessage } from '@databricks/i18n';\n\nimport { TutorialCheckPage } from '../../../components/TutorialPage';\nimport { useOnboardingCheck } from '../../../hooks/useOnboardingController';\n// import HelpTrigger from '$dynamic/components/HelpTrigger/HelpTrigger';\nimport type { OnboardingPageProps } from '../../../types';\nimport { Steps } from '../types';\n\nexport default function TutorialImportSampleDashboardPage(props: OnboardingPageProps) {\n  const importSampleDashboardCheck = useOnboardingCheck(Steps.ImportSampleDashboard);\n\n  return (\n    <TutorialCheckPage\n      title={\n        <FormattedMessage\n          defaultMessage=\"Import sample dashboard\"\n          description=\"Onboarding - import sample dashboard: Page title\"\n        />\n      }\n      check={importSampleDashboardCheck}\n      description={\n        <FormattedMessage\n          defaultMessage=\"\n            <p>You can discover insights from your query results with a wide variety of rich visualizations. Databricks SQL allows you to organize visualizations into dashboards with an intuitive drag-and-drop interface. You can then share your dashboards with others, both within and outside your organization, without the need to grant viewers direct access to the underlying data. To keep everyone current, you can configure dashboards to automatically refresh, as well as to alert viewers to meaningful changes in the data.</p>\n            <p>A dashboard gallery is available to help you get started.</p>\"\n          description=\"Onboarding - import sample dashboard: intro text\"\n        />\n      }\n      nextStepButton={props.nextButton}\n    >\n      <div>\n        {/*<HelpTrigger showTooltip={false} renderAsLink type=\"DASHBOARDS\" css={{ fontSize: 'inherit' }}>*/}\n        {/*  <FormattedMessage*/}\n        {/*    defaultMessage=\"Learn more about dashboards\"*/}\n        {/*    description=\"Onboarding - import sample dashboard: Read about dashboards guide link\"*/}\n        {/*  />*/}\n        {/*</HelpTrigger>*/}\n      </div>\n    </TutorialCheckPage>\n  );\n}\n","import React from 'react';\n\nimport { FormattedMessage } from '@databricks/i18n';\n\nimport { TutorialCheckPage } from '../../../components/TutorialPage';\nimport { useOnboardingCheck } from '../../../hooks/useOnboardingController';\n// import HelpTrigger from '$dynamic/components/HelpTrigger/HelpTrigger';\nimport type { OnboardingPageProps } from '../../../types';\nimport { Steps } from '../types';\n\nexport default function TutorialRunYourFirstQueryPage(props: OnboardingPageProps) {\n  const runFirstQueryCheck = useOnboardingCheck(Steps.RunFirstQuery);\n\n  return (\n    <TutorialCheckPage\n      title={\n        <FormattedMessage\n          defaultMessage=\"Run your first query\"\n          description=\"Onboarding - Run you first query: Page title\"\n        />\n      }\n      check={runFirstQueryCheck}\n      description={\n        <FormattedMessage\n          defaultMessage=\"<p>Databricks SQL features a fast, full-featured SQL editor for writing queries and sharing visualizations and dashboards with your team. A sample dataset is available. Try running your first query now.</p>\"\n          description=\"Onboarding - Run you first query: intro text\"\n        />\n      }\n      nextStepButton={props.nextButton}\n    >\n      <div>\n        {/*<HelpTrigger showTooltip={false} renderAsLink type=\"QUERIES\" css={{ fontSize: 'inherit' }}>*/}\n        {/*  <FormattedMessage*/}\n        {/*    defaultMessage=\"Learn more about querying your data\"*/}\n        {/*    description=\"Onboarding - Run your first query: read about queries link\"*/}\n        {/*  />*/}\n        {/*</HelpTrigger>*/}\n      </div>\n    </TutorialCheckPage>\n  );\n}\n","import { noop } from 'lodash';\n\nimport { QueryNavIcon, DataIcon, DashboardIcon } from '@databricks/design-system';\n\nimport { AutoTutorialButton } from '../../components/TutorialButton';\nimport { OnboardingAction, useOnboardingRecorders } from '../../events';\nimport { useCachedOnboardingCheck, useResetCachedOnboardingChecks } from '../../hooks/cache';\nimport type { OnboardingCheck, UseOnboardingChecks } from '../../types';\nimport TutorialExploreDataPage from './pages/TutorialExploreDataPage';\nimport TutorialImportSampleDashboardPage from './pages/TutorialImportSampleDashboardPage';\nimport TutorialRunYourFirstQueryPage from './pages/TutorialRunYourFirstQueryPage';\nimport { Steps } from './types';\n\nexport function useUserOnboardingChecks(skip: boolean): UseOnboardingChecks {\n  const { withOnboardingEventRecorder } = useOnboardingRecorders();\n  const resetChecks = useResetCachedOnboardingChecks();\n\n  const cachedHasRunFirstQuery = useCachedOnboardingCheck(Steps.RunFirstQuery);\n  const cachedHasExploredAvailableData = useCachedOnboardingCheck(Steps.ExploreAvailableData);\n  const cachedHasImportedSampleDashboard = useCachedOnboardingCheck(Steps.ImportSampleDashboard);\n\n  const importSampleDashboard = {\n    isChecking: false,\n    isCompleted: cachedHasImportedSampleDashboard,\n    button: (\n      <AutoTutorialButton\n        title=\"Import sample dashboard\"\n        checkName={Steps.ImportSampleDashboard}\n        eventName=\"importSampleDashboard\"\n        href=\"dashboards/samples\"\n        icon={<DashboardIcon />}\n        variant=\"user\"\n        targetPage={() => <TutorialImportSampleDashboardPage />}\n      />\n    ),\n    markAsDone: cachedHasImportedSampleDashboard\n      ? noop\n      : withOnboardingEventRecorder(() => {}, OnboardingAction.MarkAsDone, Steps.ImportSampleDashboard),\n  };\n\n  const exploreAvailableData = {\n    isChecking: false,\n    isCompleted: cachedHasExploredAvailableData,\n    button: (\n      <AutoTutorialButton\n        title=\"Explore available data\"\n        eventName=\"exploreAvailableData\"\n        checkName={Steps.ExploreAvailableData}\n        variant=\"user\"\n        href=\"data\"\n        icon={<DataIcon />}\n        targetPage={() => <TutorialExploreDataPage nextButton={importSampleDashboard.button} />}\n      />\n    ),\n    markAsDone: cachedHasExploredAvailableData\n      ? noop\n      : withOnboardingEventRecorder(() => {}, OnboardingAction.MarkAsDone, Steps.ExploreAvailableData),\n  };\n\n  const runFirstQuery = {\n    isChecking: false,\n    isCompleted: cachedHasRunFirstQuery,\n    button: (\n      <AutoTutorialButton\n        title=\"Run your first query\"\n        eventName=\"runFirstQuery\"\n        checkName={Steps.RunFirstQuery}\n        variant=\"user\"\n        href=\"queries/new?sample=tutorialYourFirstQuery\"\n        icon={<QueryNavIcon />}\n        targetPage={() => <TutorialRunYourFirstQueryPage nextButton={exploreAvailableData.button} />}\n      />\n    ),\n    markAsDone: cachedHasRunFirstQuery\n      ? noop\n      : withOnboardingEventRecorder(() => {}, OnboardingAction.MarkAsDone, Steps.RunFirstQuery),\n  };\n\n  const allChecks = [runFirstQuery, exploreAvailableData, importSampleDashboard];\n  const checksTodo = allChecks.filter((check) => !check.isCompleted).length;\n\n  const mapChecks: { [key: string]: OnboardingCheck } = {\n    [Steps.RunFirstQuery]: runFirstQuery,\n    [Steps.ExploreAvailableData]: exploreAvailableData,\n    [Steps.ImportSampleDashboard]: importSampleDashboard,\n  };\n\n  return {\n    checksTodo,\n    isChecking: false,\n    checks: mapChecks,\n    reset() {\n      resetChecks(Steps.RunFirstQuery, Steps.ExploreAvailableData, Steps.ImportSampleDashboard);\n    },\n  };\n}\n"],"names":["useImmutableCallback","callback","callbackRef","useRef","current","useCallback","args","OnboardingConfig","createContext","recordEvent","a","b","c","conf","isAdmin","cloud","enableOnboarding","userId","orgId","OnboardingContext","isVisible","isEnabled","hasSkipped","onboardingChecks","hide","show","skip","reset","useOnboardingSettingsController","useOnboardingEnabled","storage","useOnboardingStorage","setIsVisible","useReducer","_state","visible","resetSkip","useOnboardingSkip","hasNoVisibilitySettings","checksTodo","useEffect","checks","OnboardingContextProvider","props","onboardingSettings","_jsx","useOnboardingController","useContext","useOnboardingCheck","name","context","OnboardingConfigProvider","config","useOnboardingConfig","onboarding","useMemo","OnboardingStorage","setSkipped","next","useCachedOnboardingCheck","check","getOnboardingCheck","useCacheCompletedOnboardingCheckEffect","isCompleted","setOnboardingCheck","useResetCachedOnboardingChecks","map","TutorialRouterContext","React","pushPage","popPage","goHome","TutorialRoutes","initialRoute","routeStack","setRouteStack","useState","currentRoute","page","stack","slice","useTutorialRoute","useTutorialRouter","CurrentRoute","OnboardingAction","ONBOARDING_EVENT_OBJECT_TYPE","useOnboardingRecorders","recordOnboardingAction","action","objectId","recordCompletedOnboardingCheck","checkName","CheckCompleted","recordMarkAsDoneOnboardingCheck","MarkAsDone","withOnboardingEventRecorder","useCallbackWithOnboardingEventRecorder","recorders","callbackWithEventRecorder","useRecordOnboardingCheckCompletedEvent","tutorialVisibilityChanged","defineEvent","tutorialTaskStatusChanged","TUTORIAL_STORAGE_PREFIX","TutorialStorage","constructor","_activeStorageId","_getTaskStorageKey","taskKey","join","_getVisibilityStorageKey","getTask","taskStorageKey","JSON","parse","window","localStorage","getItem","updateTask","taskProps","cachedTask","newTask","setItem","stringify","getVisibility","visibilityStorageKey","updateVisibility","useTutorialStorage","storageId","tutorialTasks","tutorialStorage","cachedTaskStatusMap","setCachedTaskStatusMap","tasks","reduce","key","handleTaskStatusChanged","tutorialTaskKey","oldStatusMap","useListener","TutorialTasks","tasksList","forEach","task","tasksMap","TutorialContext","showTutorial","hideTutorial","TutorialProvider","enabled","children","handleVisibilityChanged","useTutorialContext","useOnboardingStyles","theme","useDesignSystemTheme","tutorialPanelColors","sidebarMenuColor","backgroundColor","colors","grey200","tutorialButtonColors","adminTaskButtonBackground","adminTaskButtonIconBackground","userTaskButtonBackground","userTaskButtonIconBackground","adminTaskButtonBackgroundOnHover","adminTaskButtonIconBackgroundOnHover","userTaskButtonBackgroundOnHover","userTaskButtonIconBackgroundOnHover","completedTaskButtonBackground","completedTaskButtonBackgroundOnHover","completedTaskButtonTextColor","duboisColors","backgroundPrimary","typePrimary","typeSecondary","textValidationInfo","typeSecondaryInverse","tutorialPanelDimensions","width","paddingHorizontal","paddingVertical","tutorialButtonDimensions","padding","iconSize","marginBottom","adminOnboardingButtonContainerVerticalSpacing","duboisFonts","header2Size","header3Size","tutorialDescriptionItemMargin","antdDefaultSizeButtonVerticalPadding","TutorialSidebar","styles","azureToolbarHeight","sidebarStyle","css","closeButtonStyle","_jsxs","AutoTutorialButton","myCheck","targetPage","UnStyledTutorialButton","variant","completed","onClick","eventName","onClickWithEventRecorder","GuidedNavigationForCheck","LegacyTutorialButton","onboardingStyles","StyledTutorialButton","colorMap","admin","buttonBackground","iconBackground","buttonBackgroundOnHover","iconBackgroundOnHover","text","arrow","textWhenCompleted","user","TutorialButton","icon","targetTutorialPage","useTutorialTaskStatus","background","backgroundOnHover","grey100","undefined","color","green600","todo","textPrimary","grey800","actionPrimaryTextDefault","colorGroup","buttonStyles","spacing","sm","md","handleClick","subtitleStyle","TutorialSubtitle","pageContainerStyle","pageHeaderStyle","skipButtonStyle","LegacyTutorialPage","title","description","hasBack","skipButton","nextStepButton","pageContentStyle","marginTop","TutorialCheckPage","onSkipClick","TutorialAbandon","shouldShowMarkAsDone","showDismiss","markAsDone","TutorialPage","canGoBack","completedText","nextTask","taskStatus","containerStyles","headerRowStyles","lg","contentStyles","marginRight","display","alignItems","backgroundValidationSuccess","textValidationSuccess","border","green400","borderRadius","general","borderRadiusBase","taskButton","TutorialHomePage","userSubtitle","buttons","Object","keys","step","currentStep","button","Steps","RunFirstQuery","ExploreAvailableData","ImportSampleDashboard","dataIcon","TutorialExploreDataPage","exploreAvailableDataCheck","TutorialImportSampleDashboardPage","importSampleDashboardCheck","nextButton","TutorialRunYourFirstQueryPage","runFirstQueryCheck","useUserOnboardingChecks","resetChecks","cachedHasRunFirstQuery","cachedHasExploredAvailableData","cachedHasImportedSampleDashboard","importSampleDashboard","isChecking","exploreAvailableData","runFirstQuery","allChecks","filter","length","mapChecks"],"mappings":"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"}