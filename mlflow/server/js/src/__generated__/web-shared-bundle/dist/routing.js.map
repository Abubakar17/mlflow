{"version":3,"file":"routing.js","sources":["../src/routing/Routes.tsx","../src/routing/Router.tsx","../src/routing/lazyRoute.tsx","../src/routing/test-utils/waitForRoutesToBeRendered.ts"],"sourcesContent":["import { Suspense } from 'react';\nimport type { RouteObject as ReactRouterRouteObject } from 'react-router';\nimport { useRoutes as useReactRouterRoutes } from 'react-router';\n\nimport type { RouteMetadata } from './Route';\n\nfunction LoadingSubstate() {\n  return <div>Loading...</div>;\n}\n\nfunction RouteRenderer({ route }: { route: RouteMetadata }) {\n  return route.element.read();\n}\n\nfunction transformRoutes(routes: RouteMetadata[]): ReactRouterRouteObject[] {\n  return routes.map((route) => ({\n    path: route.path,\n    element: (\n      <Suspense fallback={<LoadingSubstate />}>\n        <RouteRenderer route={route} />\n      </Suspense>\n    ),\n    children: route.children && transformRoutes(route.children),\n  }));\n}\n\n/**\n * Accepts a list of routes metadata and renders them according to the current location.\n *\n * Usually, this shouldn't be used directly and instead `Router` should be used. It is only\n * useful in the special case, where the router needs to be used together with existing\n * `react-router` instance.\n */\nexport function Routes({ routes }: { routes: RouteMetadata[] }) {\n  const reactRouterRoutes = transformRoutes(routes);\n  // the useRoutes() hook from `react-router` returns the element, which\n  // will correct match and render the routes according to the location\n  const reactRoutes = useReactRouterRoutes(reactRouterRoutes);\n  return reactRoutes;\n}\n","import type { History } from 'history';\nimport React from 'react';\nimport { unstable_HistoryRouter as ReactRouter } from 'react-router-dom';\n\nimport type { RouteMetadata } from './Route';\nimport { Routes } from './Routes';\n\nexport type RouterProps = {\n  history: History;\n  routes: RouteMetadata[];\n};\n\nexport function Router({ history, routes }: RouterProps) {\n  return (\n    <ReactRouter history={history}>\n      <Routes routes={routes} />\n    </ReactRouter>\n  );\n}\n","import React from 'react';\n\nexport type RouteElement = React.ReactElement<any>;\n\nexport type LazyRouteElement = {\n  /**\n   * Suspense-compatible function to get the route element.\n   */\n  read(): RouteElement;\n\n  /**\n   * Returns the route element once it is resolved.\n   */\n  load(): Promise<RouteElement>;\n};\n\nclass LazyRoute<T extends React.ComponentType<any> | React.ReactElement<any>> implements LazyRouteElement {\n  private callback: () => Promise<{ RouteComponent: T }>;\n  private pendingPromise?: Promise<RouteElement>;\n  private cachedElement?: RouteElement;\n  private error?: Error;\n\n  constructor(callback: () => Promise<{ RouteComponent: T }>) {\n    this.callback = callback;\n  }\n\n  private async doLoadAndCreateElement() {\n    try {\n      const RouteComponent = (await this.callback()).RouteComponent;\n      this.cachedElement = React.isValidElement(RouteComponent) ? RouteComponent : React.createElement(RouteComponent);\n      return this.cachedElement;\n    } catch (e) {\n      if (e instanceof Error) {\n        this.error = e;\n      }\n      throw e;\n    }\n  }\n\n  load() {\n    if (this.pendingPromise) {\n      return this.pendingPromise;\n    }\n    return (this.pendingPromise = this.doLoadAndCreateElement());\n  }\n\n  read() {\n    if (this.cachedElement) {\n      return this.cachedElement;\n    }\n    if (this.error) {\n      throw this.error;\n    }\n    throw this.load();\n  }\n}\n\nexport function lazyRoute<T extends React.ComponentType<any> | React.ReactElement<any>>(\n  callback: () => Promise<{ RouteComponent: T }>,\n): LazyRouteElement {\n  return new LazyRoute(callback);\n}\n","import { screen, waitForElementToBeRemoved } from '@testing-library/react';\n\nexport async function waitForRoutesToBeRendered() {\n  const loadingElement = screen.queryByText('Loading...');\n  await waitForElementToBeRemoved(loadingElement);\n}\n"],"names":["LoadingSubstate","_jsx","RouteRenderer","route","element","read","transformRoutes","routes","map","path","children","Routes","reactRouterRoutes","reactRoutes","useReactRouterRoutes","Router","history","ReactRouter","LazyRoute","constructor","callback","doLoadAndCreateElement","RouteComponent","cachedElement","React","isValidElement","createElement","e","Error","error","load","pendingPromise","lazyRoute","waitForRoutesToBeRendered","loadingElement","screen","queryByText","waitForElementToBeRemoved"],"mappings":";;;;;;;AAMA,SAASA,eAAT,GAA2B;EACzB,OAAOC;IAAA;IAAP;AACD;;AAED,SAASC,aAAT,OAA4D;EAAA,IAArC;IAAEC;GAAmC;EAC1D,OAAOA,KAAK,CAACC,OAAN,CAAcC,IAAd,EAAP;AACD;;AAED,SAASC,eAAT,CAAyBC,MAAzB,EAA4E;EAC1E,OAAOA,MAAM,CAACC,GAAP,CAAYL,KAAD,KAAY;IAC5BM,IAAI,EAAEN,KAAK,CAACM,IADgB;IAE5BL,OAAO,EACLH,IAAC,QAAD;MAAU,QAAQ,EAAEA,IAAC,eAAD,KAApB;MAAA,UACEA,IAAC,aAAD;QAAe,KAAK,EAAEE;;MAJE;IAO5BO,QAAQ,EAAEP,KAAK,CAACO,QAAN,IAAkBJ,eAAe,CAACH,KAAK,CAACO,QAAP;GAP3B,CAAX,CAAP;AASD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASC,MAAT,QAAyD;EAAA,IAAzC;IAAEJ;GAAuC;EAC9D,MAAMK,iBAAiB,GAAGN,eAAe,CAACC,MAAD,CAAzC,CAD8D;;;EAI9D,MAAMM,WAAW,GAAGC,SAAoB,CAACF,iBAAD,CAAxC;EACA,OAAOC,WAAP;AACD;;AC3BM,SAASE,MAAT,OAAkD;EAAA,IAAlC;IAAEC,OAAF;IAAWT;GAAuB;EACvD,OACEN,IAACgB,sBAAD;IAAa,OAAO,EAAED,OAAtB;IAAA,UACEf,IAAC,MAAD;MAAQ,MAAM,EAAEM;;IAFpB;AAKD;;ACFD,MAAMW,SAAN,CAA0G;EAMxGC,WAAW,CAACC,QAAD,EAAiD;IAC1D,KAAKA,QAAL,GAAgBA,QAAhB;;;EAGkC,MAAtBC,sBAAsB,GAAG;IACrC,IAAI;MACF,MAAMC,cAAc,GAAG,CAAC,MAAM,KAAKF,QAAL,EAAP,EAAwBE,cAA/C;MACA,KAAKC,aAAL,gBAAqBC,KAAK,CAACC,cAAN,CAAqBH,cAArB,IAAuCA,cAAvC,gBAAwDE,KAAK,CAACE,aAAN,CAAoBJ,cAApB,CAA7E;MACA,OAAO,KAAKC,aAAZ;KAHF,CAIE,OAAOI,CAAP,EAAU;MACV,IAAIA,CAAC,YAAYC,KAAjB,EAAwB;QACtB,KAAKC,KAAL,GAAaF,CAAb;;;MAEF,MAAMA,CAAN;;;;EAIJG,IAAI,GAAG;IACL,IAAI,KAAKC,cAAT,EAAyB;MACvB,OAAO,KAAKA,cAAZ;;;IAEF,OAAQ,KAAKA,cAAL,GAAsB,KAAKV,sBAAL,EAA9B;;;EAGFhB,IAAI,GAAG;IACL,IAAI,KAAKkB,aAAT,EAAwB;MACtB,OAAO,KAAKA,aAAZ;;;IAEF,IAAI,KAAKM,KAAT,EAAgB;MACd,MAAM,KAAKA,KAAX;;;IAEF,MAAM,KAAKC,IAAL,EAAN;;;AArCsG;;AAyCnG,SAASE,SAAT,CACLZ,QADK,EAEa;EAClB,OAAO,IAAIF,SAAJ,CAAcE,QAAd,CAAP;AACD;;AC3DM,eAAea,yBAAf,GAA2C;EAChD,MAAMC,cAAc,GAAGC,MAAM,CAACC,WAAP,CAAmB,YAAnB,CAAvB;EACA,MAAMC,yBAAyB,CAACH,cAAD,CAA/B;AACD;;;;"}