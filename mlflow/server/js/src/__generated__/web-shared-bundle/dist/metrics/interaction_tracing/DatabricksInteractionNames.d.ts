export declare enum InteractionName {
    /** redash interactions */
    REDASH_UNKNOWN = "redash.unknown",
    REDASH_EDITOR_ADD_EXISTING_QUERY_TAB = "redash.editor.existing.query.tab.add",
    REDASH_EDITOR_REMOVE_TAB = "redash.editor.tab.remove",
    REDASH_EDITOR_SWITCH_TAB = "redash.editor.tab.switch",
    REDASH_EDITOR_ADD_NEW_QUERY_TAB = "redash.editor.new.query.tab.add",
    REDASH_EDITOR_FORMAT_QUERY = "redash.editor.query.format",
    REDASH_EDITOR_UNDO_QUERY = "redash.editor.query.undo",
    REDASH_EDITOR_TYPING_QUERY = "redash.editor.query.typing",
    REDASH_EDITOR_RUN_QUERY = "redash.editor.query.run",
    REDASH_EDITOR_SAVE_QUERY = "redash.editor.query.save",
    REDASH_EDITOR_SWITCH_ENDPOINT = "redash.editor.endpoint.switch",
    REDASH_OLD_EDITOR_FORMAT_QUERY = "redash.old.editor.query.format",
    REDASH_OLD_EDITOR_UNDO_QUERY = "redash.old.editor.query.undo",
    REDASH_OLD_EDITOR_TYPING_QUERY = "redash.old.editor.query.typing",
    REDASH_OLD_EDITOR_RUN_QUERY = "redash.old.editor.query.run",
    REDASH_OLD_EDITOR_SAVE_QUERY = "redash.old.editor.query.save",
    /** webapp interactions */
    WEBAPP_CLUSTERS = "webapp.clusters",
    WEBAPP_CLUSTERS_ATTACH = "webapp.clusters.attach",
    WEBAPP_CLUSTERS_CREATE = "webapp.clusters.create",
    WEBAPP_DASHBOARD = "webapp.dashboard",
    WEBAPP_DEPRECATED_TABLE_ENDPOINT = "webapp.deprecated_table_endpoint",
    WEBAPP_EMPTY = "webapp.empty",
    WEBAPP_EXPERIMENTAL = "webapp.experimental",
    WEBAPP_FOLDER = "webapp.folder",
    WEBAPP_HOME = "webapp.home",
    WEBAPP_JOB_CREATE = "webapp.job.create",
    WEBAPP_JOB_LIST = "webapp.job.list",
    WEBAPP_JOB_RUN = "webapp.job.run",
    WEBAPP_JOB_UNKNOWN = "webapp.job.unknown",
    WEBAPP_LIBRARY = "webapp.library",
    WEBAPP_NOTEBOOK = "webapp.notebook",
    WEBAPP_NOTEBOOK_FULLY_LOADED = "webapp.notebook.fully_loaded",
    WEBAPP_NOTEBOOK_ADD_COMMAND = "webapp.notebook.command.add",
    WEBAPP_NOTEBOOK_DASHBOARD = "webapp.notebook.dashboard",
    WEBAPP_NOTEBOOK_PASTE_COMMAND = "webapp.notebook.command.paste",
    WEBAPP_NOTEBOOK_RUN_ALL_COMMAND = "webapp.notebook.command.run_all",
    WEBAPP_NOTEBOOK_CLICK_INTO_CELL = "webapp.notebook.command.click_into",
    WEBAPP_NOTEBOOK_RESULT = "webapp.notebook.results_only",
    WEBAPP_NOTEBOOK_REVISION = "webapp.notebook.revision",
    WEBAPP_NOTEBOOK_REVISION_MFFLOW = "webapp.notebook.revision_mlflow_run",
    WEBAPP_NOTEBOOK_SIDEVIEW = "webapp.notebook.sideview",
    WEBAPP_NOTEBOOK_CANCEL_COMMAND = "webapp.notebook.cancel_command",
    WEBAPP_NOTEBOOK_DELETE_COMMAND = "webapp.notebook.delete_command",
    WEBAPP_REPO_GIT_MODAL_LOAD = "webapp.repo.load_git_modal",
    WEBAPP_REPO_GIT_DIFF_LOAD = "webapp.repo.load_git_diff",
    WEBAPP_SCHEMA_BROWSING_THREE_LEVEL = "webapp.scema_browsing.three_level",
    WEBAPP_SCHEMA_BROWSING_TWO_LEVEL = "webapp.scema_browsing.two_level",
    WEBAPP_SETTING = "webapp.setting",
    WEBAPP_SETTING_ACCOUNTS = "webapp.setting.accounts",
    WEBAPP_SHELL = "webapp.shell",
    WEBAPP_SUBROUTE = "webapp.subroute",
    WEBAPP_NOTEBOOK_RUN_COMMAND = "webapp.notebook.command.run",
    WEBAPP_UNKNOWN = "webapp.unknown",
    WEBAPP_WORKSPACE = "webapp.workspace",
    WEBAPP_OPEN_DATA_TAB = "webapp.sidebar.data_tab.open",
    WEBAPP_CLOSE_DATA_TAB = "webapp.sidebar.data_tab.close",
    /**
     * Until we instrument other panels in the sidebar, we'll use this generic interaction to signify
     * that we closed a side panel hat we had not yet instrumented (i.e. something other than closing the data tab).
     */
    WEBAPP_GENERIC_CLOSE_SIDEBAR = "webapp.sidebar.close",
    WEBAPP_DATA_TAB_TABLE_PANEL_CHANGE_DATABASE = "webapp.sidebar.data_tab.table_panel.database.change",
    WEBAPP_DATA_TAB_TABLE_PANEL_CHANGE_CATALOG = "webapp.sidebar.data_tab.table_panel.catalog.change",
    WEBAPP_TABLE_PAGE_REFRESH = "webapp.table.page.refresh",
    WEBAPP_TABLE_PAGE_REFRESH_ON_ERROR = "webapp.table.page.refresh.on.error",
    /** mlflow interactions */
    MLFLOW_EXPERIMENT_OBSERVATORY_LIST = "mlflow.experiment.observatory.list",
    MLFLOW_UNKNOWN = "mlflow.unknown",
    MLFLOW_EXPERIMENT_PAGE = "mlflow.experiment.details",
    MLFLOW_COMPARE_EXPERIMENTS_HOME_PAGE = "mlflow.experiment.compare",
    MLFLOW_RUN_PAGE = "mlflow.experiment.run.details",
    MLFLOW_COMPARE_RUN_PAGE = "mlflow.experiment.run.compare",
    MLFLOW_METRIC_PAGE = "mlflow.metric.details",
    MLFLOW_MODEL_LIST_PAGE = "mlflow.models.list",
    MLFLOW_MODEL_VERSION_PAGE = "mlflow.model.version.details",
    MLFLOW_MODEL_PAGE = "mlflow.model.details",
    MLFLOW_MODEL_PAGE_SUBPAGE = "mlflow.model.details.subpage",
    MLFLOW_MODEL_PAGE_SUBPAGE_WITH_NAME = "mlflow.model.details.subpage.name",
    MLFLOW_COMPARE_MODEL_VERSIONS_PAGE = "mlflow.model.version.compare",
    MLFLOW_CREATE_MODEL_PAGE = "mlflow.model.create",
    /** feature store interactions */
    FEATURE_STORE_PAGE = "featurestore.list",
    FEATURE_STORE_TABLE_PAGE = "featurestore.table",
    FEATURE_STORE_STORE_PAGE = "featurestore.onlinestore",
    /** Filebrowser interactions */
    FILEBROWSER_INITIAL_OPEN = "filebrowser.initial_open",
    FILEBROWSER_NAVIGATE_FOLDER = "filebrowser.navigate.folder",
    FILEBROWSER_SHARE_MODAL_OPEN = "filebrowser.share_modal.open",
    /** data explorer interactions */
    EXPLORER_DATA_INDEX = "data_explorer.data.index",
    EXPLORER_DATA_CATALOG = "data_explorer.data.catalog",
    EXPLORER_DATA_DATABASE = "data_explorer.data.database",
    EXPLORER_DATA_TABLE = "data_explorer.data.table",
    EXPLORER_DATA_TABLE_COLUMN_TAB = "data_explorer.data.table_column_tab",
    EXPLORER_DATA_TABLE_SAMPLE_DATA_TAB = "data_explorer.data.table_sample_tab",
    EXPLORER_DATA_TABLE_METADATA_TAB = "data_explorer.data.table_metadata_tab",
    EXPLORER_DATA_TABLE_PERMISSIONS_TAB = "data_explorer.data.table_permissions_tab",
    EXPLORER_DATA_TABLE_HISTORY_TAB = "data_explorer.data.table_history_tab",
    EXPLORER_DATA_TABLE_LINEAGE_TAB = "data_explorer.data.table_lineage_tab",
    EXPLORER_UC_SEARCH_HOMEPAGE = "data_explorer.search.homepage",
    EXPLORER_UC_SEARCH_IN_MODAL = "data_explorer.search.in_modal",
    EXPLORER_UC_SEARCH_CHANGE_CATALOGS = "data_explorer.search.change_catalogs",
    EXPLORER_UC_SEARCH_CHANGE_DATABASES = "data_explorer.search.change_databases",
    EXPLORER_UC_SEARCH_CLEAR_FILTER = "data_explorer.search.clear_filter"
}
//# sourceMappingURL=DatabricksInteractionNames.d.ts.map